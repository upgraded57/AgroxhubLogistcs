/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as AuthVerifyEmailIndexImport } from './routes/auth/verify-email/index'
import { Route as AuthRegisterIndexImport } from './routes/auth/register/index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as AuthCheckEmailIndexImport } from './routes/auth/check-email/index'
import { Route as appRegionsIndexImport } from './routes/(app)/regions/index'
import { Route as appProfileIndexImport } from './routes/(app)/profile/index'
import { Route as appOrdersIndexImport } from './routes/(app)/orders/index'
import { Route as appNotificationsIndexImport } from './routes/(app)/notifications/index'
import { Route as appFinanceIndexImport } from './routes/(app)/finance/index'
import { Route as appDeliverablesIndexImport } from './routes/(app)/deliverables/index'
import { Route as appOrdersOrderIdImport } from './routes/(app)/orders/$orderId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyEmailIndexRoute = AuthVerifyEmailIndexImport.update({
  id: '/auth/verify-email/',
  path: '/auth/verify-email/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterIndexRoute = AuthRegisterIndexImport.update({
  id: '/auth/register/',
  path: '/auth/register/',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthCheckEmailIndexRoute = AuthCheckEmailIndexImport.update({
  id: '/auth/check-email/',
  path: '/auth/check-email/',
  getParentRoute: () => rootRoute,
} as any)

const appRegionsIndexRoute = appRegionsIndexImport.update({
  id: '/(app)/regions/',
  path: '/regions/',
  getParentRoute: () => rootRoute,
} as any)

const appProfileIndexRoute = appProfileIndexImport.update({
  id: '/(app)/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any)

const appOrdersIndexRoute = appOrdersIndexImport.update({
  id: '/(app)/orders/',
  path: '/orders/',
  getParentRoute: () => rootRoute,
} as any)

const appNotificationsIndexRoute = appNotificationsIndexImport.update({
  id: '/(app)/notifications/',
  path: '/notifications/',
  getParentRoute: () => rootRoute,
} as any)

const appFinanceIndexRoute = appFinanceIndexImport.update({
  id: '/(app)/finance/',
  path: '/finance/',
  getParentRoute: () => rootRoute,
} as any)

const appDeliverablesIndexRoute = appDeliverablesIndexImport.update({
  id: '/(app)/deliverables/',
  path: '/deliverables/',
  getParentRoute: () => rootRoute,
} as any)

const appOrdersOrderIdRoute = appOrdersOrderIdImport.update({
  id: '/(app)/orders/$orderId',
  path: '/orders/$orderId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/orders/$orderId': {
      id: '/(app)/orders/$orderId'
      path: '/orders/$orderId'
      fullPath: '/orders/$orderId'
      preLoaderRoute: typeof appOrdersOrderIdImport
      parentRoute: typeof rootRoute
    }
    '/(app)/deliverables/': {
      id: '/(app)/deliverables/'
      path: '/deliverables'
      fullPath: '/deliverables'
      preLoaderRoute: typeof appDeliverablesIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/finance/': {
      id: '/(app)/finance/'
      path: '/finance'
      fullPath: '/finance'
      preLoaderRoute: typeof appFinanceIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/notifications/': {
      id: '/(app)/notifications/'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof appNotificationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/orders/': {
      id: '/(app)/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof appOrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/profile/': {
      id: '/(app)/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof appProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/regions/': {
      id: '/(app)/regions/'
      path: '/regions'
      fullPath: '/regions'
      preLoaderRoute: typeof appRegionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/check-email/': {
      id: '/auth/check-email/'
      path: '/auth/check-email'
      fullPath: '/auth/check-email'
      preLoaderRoute: typeof AuthCheckEmailIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-email/': {
      id: '/auth/verify-email/'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthIndexRoute
  '/orders/$orderId': typeof appOrdersOrderIdRoute
  '/deliverables': typeof appDeliverablesIndexRoute
  '/finance': typeof appFinanceIndexRoute
  '/notifications': typeof appNotificationsIndexRoute
  '/orders': typeof appOrdersIndexRoute
  '/profile': typeof appProfileIndexRoute
  '/regions': typeof appRegionsIndexRoute
  '/auth/check-email': typeof AuthCheckEmailIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/verify-email': typeof AuthVerifyEmailIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthIndexRoute
  '/orders/$orderId': typeof appOrdersOrderIdRoute
  '/deliverables': typeof appDeliverablesIndexRoute
  '/finance': typeof appFinanceIndexRoute
  '/notifications': typeof appNotificationsIndexRoute
  '/orders': typeof appOrdersIndexRoute
  '/profile': typeof appProfileIndexRoute
  '/regions': typeof appRegionsIndexRoute
  '/auth/check-email': typeof AuthCheckEmailIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/auth/verify-email': typeof AuthVerifyEmailIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/': typeof AuthIndexRoute
  '/(app)/orders/$orderId': typeof appOrdersOrderIdRoute
  '/(app)/deliverables/': typeof appDeliverablesIndexRoute
  '/(app)/finance/': typeof appFinanceIndexRoute
  '/(app)/notifications/': typeof appNotificationsIndexRoute
  '/(app)/orders/': typeof appOrdersIndexRoute
  '/(app)/profile/': typeof appProfileIndexRoute
  '/(app)/regions/': typeof appRegionsIndexRoute
  '/auth/check-email/': typeof AuthCheckEmailIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/auth/verify-email/': typeof AuthVerifyEmailIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/orders/$orderId'
    | '/deliverables'
    | '/finance'
    | '/notifications'
    | '/orders'
    | '/profile'
    | '/regions'
    | '/auth/check-email'
    | '/auth/login'
    | '/auth/register'
    | '/auth/verify-email'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/orders/$orderId'
    | '/deliverables'
    | '/finance'
    | '/notifications'
    | '/orders'
    | '/profile'
    | '/regions'
    | '/auth/check-email'
    | '/auth/login'
    | '/auth/register'
    | '/auth/verify-email'
  id:
    | '__root__'
    | '/'
    | '/auth/'
    | '/(app)/orders/$orderId'
    | '/(app)/deliverables/'
    | '/(app)/finance/'
    | '/(app)/notifications/'
    | '/(app)/orders/'
    | '/(app)/profile/'
    | '/(app)/regions/'
    | '/auth/check-email/'
    | '/auth/login/'
    | '/auth/register/'
    | '/auth/verify-email/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthIndexRoute: typeof AuthIndexRoute
  appOrdersOrderIdRoute: typeof appOrdersOrderIdRoute
  appDeliverablesIndexRoute: typeof appDeliverablesIndexRoute
  appFinanceIndexRoute: typeof appFinanceIndexRoute
  appNotificationsIndexRoute: typeof appNotificationsIndexRoute
  appOrdersIndexRoute: typeof appOrdersIndexRoute
  appProfileIndexRoute: typeof appProfileIndexRoute
  appRegionsIndexRoute: typeof appRegionsIndexRoute
  AuthCheckEmailIndexRoute: typeof AuthCheckEmailIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  AuthVerifyEmailIndexRoute: typeof AuthVerifyEmailIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  appOrdersOrderIdRoute: appOrdersOrderIdRoute,
  appDeliverablesIndexRoute: appDeliverablesIndexRoute,
  appFinanceIndexRoute: appFinanceIndexRoute,
  appNotificationsIndexRoute: appNotificationsIndexRoute,
  appOrdersIndexRoute: appOrdersIndexRoute,
  appProfileIndexRoute: appProfileIndexRoute,
  appRegionsIndexRoute: appRegionsIndexRoute,
  AuthCheckEmailIndexRoute: AuthCheckEmailIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  AuthVerifyEmailIndexRoute: AuthVerifyEmailIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/",
        "/(app)/orders/$orderId",
        "/(app)/deliverables/",
        "/(app)/finance/",
        "/(app)/notifications/",
        "/(app)/orders/",
        "/(app)/profile/",
        "/(app)/regions/",
        "/auth/check-email/",
        "/auth/login/",
        "/auth/register/",
        "/auth/verify-email/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/(app)/orders/$orderId": {
      "filePath": "(app)/orders/$orderId.tsx"
    },
    "/(app)/deliverables/": {
      "filePath": "(app)/deliverables/index.tsx"
    },
    "/(app)/finance/": {
      "filePath": "(app)/finance/index.tsx"
    },
    "/(app)/notifications/": {
      "filePath": "(app)/notifications/index.tsx"
    },
    "/(app)/orders/": {
      "filePath": "(app)/orders/index.tsx"
    },
    "/(app)/profile/": {
      "filePath": "(app)/profile/index.tsx"
    },
    "/(app)/regions/": {
      "filePath": "(app)/regions/index.tsx"
    },
    "/auth/check-email/": {
      "filePath": "auth/check-email/index.tsx"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx"
    },
    "/auth/register/": {
      "filePath": "auth/register/index.tsx"
    },
    "/auth/verify-email/": {
      "filePath": "auth/verify-email/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
